// Código desenvolvido para implementação em um ARDUINO UNO
// Desenvolvido por Dimitri Jantsch Kist
// UTFPR 14/11/2024
// Garanta que as devidas bibliotecas estão incluidas!!

#include <Servo.h>
#include <Keypad.h>
#include <LiquidCrystal.h>
#include <math.h>

// Configuração do Servo Motor
Servo servoMotor;
int anguloAtual = 0;

// Configuração do LCD
const int rs = 0, en = 1, d4 = 2, d5 = 3, d6 = 4, d7 = 5;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Configuração do Teclado Matricial 4x4
const byte LINHAS = 4;
const byte COLUNAS = 4;
char teclas[LINHAS][COLUNAS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'R', '0', 'E', 'D'}
};

byte pinosLinhas[LINHAS] = {13, 12, 11, 10}; // Pinos das linhas
byte pinosColunas[COLUNAS] = {A3, A2, A1, A0}; // Pinos das colunas
Keypad teclado = Keypad(makeKeymap(teclas), pinosLinhas, pinosColunas, LINHAS, COLUNAS);

// Configuração dos Botões com Pull-up e lógica inversa
const int botao1 = 8;  // Modo de entrada de ângulo pelo teclado
const int botao2 = 7;  // Modo de leitura de tensão
const int botao3 = A4;  // Botão de emergência (volta o servo para 0 graus)

// Configuração da Leitura de Tensão
const int pinoLeituraTensao = A5;
float tensaoLida = 0.0;

// Variáveis para armazenar o ângulo temporário
String entradaUsuario = ""; // String para armazenar números digitados
enum Modo { DESABILITADO, MODO_TECLADO, MODO_ANGULO, MODO_SENOIDAL, MODO_TENSAO };
Modo modoAtual = DESABILITADO; // Variável para armazenar o modo atual

// Variáveis para o Modo Senoidal
unsigned long ultimaAtualizacaoSenoidal = 0;
float frequencia = 0.10;

void setup() {
  // Inicializar o servo e posicionar no ângulo 0
  servoMotor.attach(9); // Pino do servo
  servoMotor.write(anguloAtual);
  
  // Inicializar o LCD e exibir mensagem inicial
  lcd.begin(20, 2);
  lcd.print("Modo: Desabilitado");

  // Configurar os botões com pull-up e lógica inversa
  pinMode(botao1, INPUT_PULLUP);
  pinMode(botao2, INPUT_PULLUP);
  pinMode(botao3, INPUT_PULLUP);
}

void loop() {
  // Verificar se o botão de emergência está pressionado
  if (digitalRead(botao3) == LOW) { // Lógica inversa (pressionado = LOW)
    anguloAtual = 0;
    servoMotor.write(anguloAtual);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Emergencia Ativada!");
    lcd.setCursor(0, 1);
    lcd.print("Valvula Fechada");
    delay(500); // Debounce e pausa de emergência
    return; // Ignora o restante do código até o botão de emergência ser liberado
  }

  // Verificar se o botão 2 está pressionado para acessar o modo Tensão
  if (digitalRead(botao2) == LOW) {
    modoAtual = MODO_TENSAO;
    tensaoLida = analogRead(pinoLeituraTensao) * (5.0 / 1023.0); // Leitura da tensão em volts
    anguloAtual = map(tensaoLida * 100, 0, 500, 0, 90); // Mapeia a tensão lida para um ângulo entre 0 e 90
    servoMotor.write(anguloAtual*2);

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Modo: Tensao");
    lcd.setCursor(0, 1);
    lcd.print("Tensao:");
    lcd.print(tensaoLida, 2);
    lcd.print("V ang:");
    lcd.print(anguloAtual);
    lcd.print((char)223);
    delay(100); // Delay para atualização
    return;
  }

  // Verificar se o botão 1 está pressionado para acessar o modo Teclado
  if (digitalRead(botao1) == LOW) { 
    char teclaPressionada = teclado.getKey();
    if((modoAtual != MODO_SENOIDAL) && (modoAtual != MODO_ANGULO)){
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Modo: Teclado");
      lcd.setCursor(0, 1);
      lcd.print("A=Angulo B=Senoidal");
      delay(200);
    }
    // Verifica teclas para alternar entre modos no Modo Teclado

    if (teclaPressionada == 'A') {
      modoAtual = MODO_ANGULO;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Mod:Angulo ");
      lcd.print("Atual:");
      lcd.print(entradaUsuario);
      lcd.print((char)223);
      lcd.setCursor(0, 1);
      lcd.print("Digite o angulo:");
      lcd.print(entradaUsuario);
      lcd.print((char)223);
      entradaUsuario = ""; // Limpa entrada anterior
    } else if (teclaPressionada == 'B') {
      modoAtual = MODO_SENOIDAL;
    }
  } 
  else {
    modoAtual = DESABILITADO;
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Desabilitado");
    lcd.setCursor(0, 1);
    lcd.print("Valvula Fechada");
    servoMotor.write(0); // Fecha o servo
    delay(100);
    }

  // Modo de Ângulo: Define o ângulo do servo
  if (modoAtual == MODO_ANGULO) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Mod:Angulo ");
    lcd.print("Atual:");
    lcd.print(anguloAtual/2);
    lcd.print((char)223);
    lcd.setCursor(0, 1);
    lcd.print("Digite o angulo:");
    lcd.print(entradaUsuario);
    lcd.print((char)223);
    delay(100);
    char teclaPressionada = teclado.getKey();
    if (teclaPressionada >= '0' && teclaPressionada <= '9') {
      entradaUsuario += teclaPressionada;
    } 
    else if (teclaPressionada == 'E') {
      int novoPercentual = entradaUsuario.toInt();
      if (novoPercentual >= 0 && novoPercentual <= 90) {
        anguloAtual = map(novoPercentual, 0, 90, 0, 180);
        servoMotor.write(anguloAtual);
        lcd.clear();
        lcd.setCursor(0, 1);
        lcd.print("Angulo definido: ");
        lcd.print(novoPercentual);
        lcd.print((char)223);
      } else {
        lcd.setCursor(0, 1);
        lcd.print("Valor invalido (0-90)");
      }
      entradaUsuario = "";
      delay(3000);
      if (anguloAtual > 90) {
            servoMotor.write(anguloAtual - 3);
      } else if (anguloAtual < 90) {
            servoMotor.write(anguloAtual + 3);
        }
    } 
     if (teclaPressionada == 'R'){
      entradaUsuario="";
      lcd.clear();
      delay(300);
    }
  }

  // Modo Senoidal: Varia o ângulo do servo de forma senoidal
  if (modoAtual == MODO_SENOIDAL) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Modo:Sen ");
    lcd.print("Atual: ");
    lcd.print(frequencia);
    lcd.print("Hz");
    lcd.setCursor(0, 1);
    lcd.print("Digite a freq:");
    lcd.print(entradaUsuario);
    lcd.print("Hz");
    delay(100);
    char teclaPressionada = teclado.getKey();
    if (teclaPressionada >= '0' && teclaPressionada <= '9') {
      entradaUsuario += teclaPressionada;
    } 
     else if (teclaPressionada == 'E') {
      int freqUsuario = entradaUsuario.toInt();
      frequencia = freqUsuario / 100.0; // Dividir frequência por 100
      entradaUsuario = "";
    }else if (teclaPressionada == 'R'){
      entradaUsuario="";
      lcd.clear();
      delay(300);
    }

    // Cálculo do ângulo senoidal
    unsigned long tempoAtual = millis();
    if (tempoAtual - ultimaAtualizacaoSenoidal >= (1000 / (frequencia * 360))) {
      anguloAtual = 90 * sin(2 * PI * frequencia * tempoAtual / 1000);
      servoMotor.write(anguloAtual+90);
      ultimaAtualizacaoSenoidal = tempoAtual;
    }
  }
}
